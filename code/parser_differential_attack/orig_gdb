GNU gdb (Ubuntu 8.0.1-0ubuntu1) 8.0.1
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from license_2_fuzz...(no debugging symbols found)...done.
(gdb) Dump of assembler code for function main:
   0x00000000004005bd <+0>:	push   %rbp
   0x00000000004005be <+1>:	mov    %rsp,%rbp
   0x00000000004005c1 <+4>:	push   %rbx
   0x00000000004005c2 <+5>:	sub    $0x28,%rsp
   0x00000000004005c6 <+9>:	mov    %edi,-0x24(%rbp)
   0x00000000004005c9 <+12>:	mov    %rsi,-0x30(%rbp)
   0x00000000004005cd <+16>:	cmpl   $0x2,-0x24(%rbp)
   0x00000000004005d1 <+20>:	jne    0x400663 <main+166>
   0x00000000004005d7 <+26>:	mov    -0x30(%rbp),%rax
   0x00000000004005db <+30>:	add    $0x8,%rax
   0x00000000004005df <+34>:	mov    (%rax),%rax
   0x00000000004005e2 <+37>:	mov    %rax,%rsi
   0x00000000004005e5 <+40>:	mov    $0x400704,%edi
   0x00000000004005ea <+45>:	mov    $0x0,%eax
   0x00000000004005ef <+50>:	callq  0x4004a0 <printf@plt>
   0x00000000004005f4 <+55>:	movl   $0x0,-0x18(%rbp)
   0x00000000004005fb <+62>:	movl   $0x0,-0x14(%rbp)
   0x0000000000400602 <+69>:	jmp    0x400624 <main+103>
   0x0000000000400604 <+71>:	mov    -0x30(%rbp),%rax
   0x0000000000400608 <+75>:	add    $0x8,%rax
   0x000000000040060c <+79>:	mov    (%rax),%rdx
   0x000000000040060f <+82>:	mov    -0x14(%rbp),%eax
   0x0000000000400612 <+85>:	cltq   
   0x0000000000400614 <+87>:	add    %rdx,%rax
   0x0000000000400617 <+90>:	movzbl (%rax),%eax
   0x000000000040061a <+93>:	movsbl %al,%eax
   0x000000000040061d <+96>:	add    %eax,-0x18(%rbp)
   0x0000000000400620 <+99>:	addl   $0x1,-0x14(%rbp)
   0x0000000000400624 <+103>:	mov    -0x14(%rbp),%eax
   0x0000000000400627 <+106>:	movslq %eax,%rbx
   0x000000000040062a <+109>:	mov    -0x30(%rbp),%rax
   0x000000000040062e <+113>:	add    $0x8,%rax
   0x0000000000400632 <+117>:	mov    (%rax),%rax
   0x0000000000400635 <+120>:	mov    %rax,%rdi
   0x0000000000400638 <+123>:	callq  0x400490 <strlen@plt>
   0x000000000040063d <+128>:	cmp    %rax,%rbx
   0x0000000000400640 <+131>:	jb     0x400604 <main+71>
   0x0000000000400642 <+133>:	cmpl   $0x394,-0x18(%rbp)
   0x0000000000400649 <+140>:	jne    0x400657 <main+154>
   0x000000000040064b <+142>:	mov    $0x40071a,%edi
   0x0000000000400650 <+147>:	callq  0x400480 <puts@plt>
   0x0000000000400655 <+152>:	jmp    0x40066d <main+176>
   0x0000000000400657 <+154>:	mov    $0x40072a,%edi
   0x000000000040065c <+159>:	callq  0x400480 <puts@plt>
   0x0000000000400661 <+164>:	jmp    0x40066d <main+176>
   0x0000000000400663 <+166>:	mov    $0x400731,%edi
   0x0000000000400668 <+171>:	callq  0x400480 <puts@plt>
   0x000000000040066d <+176>:	mov    $0x0,%eax
   0x0000000000400672 <+181>:	add    $0x28,%rsp
   0x0000000000400676 <+185>:	pop    %rbx
   0x0000000000400677 <+186>:	pop    %rbp
   0x0000000000400678 <+187>:	retq   
End of assembler dump.
(gdb) quit
